*, *::before, *::after {
    box-sizing: border-box;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    font-weight: bold;
}

body {
    margin: 0;
    background: linear-gradient(to right, #4a00e0, #8e2de2);
    /* Prevent the body itself from ever scrolling */
    overflow: hidden; 
}

body::before {
    content: 'CALCULATOR';
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 15vw;
    font-weight: 900;
    color: rgba(255, 255, 255, 0.07);
    z-index: -1;
    user-select: none;
}

.calculator-grid {
    display: grid;
    justify-content: center;
    align-content: center;
    height: 100vh; /* Make the grid container exactly the screen height */

    /* === THIS IS THE FINAL FIX === */
    /* Instead of fixed pixel heights that can overflow, we use flexible fractional units (fr). */
    /* This divides the available vertical space proportionally among all the rows, */
    /* guaranteeing that the entire calculator fits on the screen without scrolling. */
    /* The display gets a larger portion (1.5fr) of the space. */
    grid-template-columns: repeat(4, 120px); 
    grid-template-rows: 1.5fr repeat(7, 1fr); /* 1 display row + 7 button rows */
    
    /* We add a max-height for very tall screens to prevent it from stretching too much */
    max-height: 850px;
    padding: 10px; /* Add some padding around the grid */
}

.calculator-grid > button {
    cursor: pointer;
    font-size: 2rem;
    border: 1px solid black;
    outline: none;
    background-color: rgba(0, 0, 0, .65);
    color: white;
    /* Add a transition for a smooth hover effect */
    transition: background-color 0.15s ease-in-out;
}

.calculator-grid > button:hover {
    background-color: rgba(0, 0, 0, .8);
}

.operator {
    background-color: #ff9500;
}

.operator:hover {
    background-color: #ffab40;
}

[data-equals].operator {
    background-color: #e000b7;
}

[data-equals].operator:hover {
    background-color: #ff00d4;
}

.span-two {
    grid-column: span 2;
}

.output {
    grid-column: 1 / -1;
    background-color: rgba(0, 0, 0, .75);
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    justify-content: space-around;
    padding: 10px;
    word-wrap: break-word;
    word-break: break-all;
    min-height: 80px; /* Ensure display has a minimum height */
}

.previous-operand {
    color: rgba(255, 255, 255, .75);
    font-size: 1.5rem;
}

.current-operand {
    color: white;
    font-size: 2.5rem;
}

.current-operand.error-message {
    font-size: 1.6rem;
    color: rgba(255, 100, 100, 0.85);
}